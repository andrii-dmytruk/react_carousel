{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","gap","state","translate","leftDisable","props","infinite","rightDisable","frameSize","newFrameSize","moveNext","prevTranslate","step","itemWidth","itemWidthWithGap","newTranslate","maxShift","setState","moveBack","setLeftButton","setRightButton","calcWrapperWidth","Math","trunc","this","images","animationDuration","wrapperStyle","width","itemStyle","listStyle","transitionDuration","transform","className","style","map","image","index","src","alt","String","uuid","type","classNames","onClick","React","Component","App","handleItemWidth","event","Number","target","value","handleFrameSize","handleStep","handleAnimationDuration","handleInfinite","checked","length","name","id","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9db14aab.chunk.js","sourcesContent":["// import { type } from 'os';\nimport uuid from 'react-uuid';\nimport React, { CSSProperties } from 'react';\nimport './Carousel.scss';\nimport classNames from 'classnames';\n\ntype State = {\n  translate: number;\n  leftDisable: boolean;\n  rightDisable: boolean;\n  frameSize: number;\n};\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  gap = 20;\n\n  state: Readonly<State> = {\n    translate: 0,\n    leftDisable: !this.props.infinite,\n    rightDisable: false,\n    frameSize: this.props.frameSize,\n  };\n\n  newFrameSize = this.state.frameSize;\n\n  moveNext = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    if (step > (10 - this.newFrameSize) && !infinite) {\n      return;\n    }\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    const newTranslate = prevTranslate - step * itemWidthWithGap;\n    const maxShift = -itemWidthWithGap * (10 - this.newFrameSize);\n\n    if (newTranslate >= maxShift) {\n      this.setState({\n        translate: newTranslate,\n        rightDisable: newTranslate === maxShift ? !infinite : false,\n        leftDisable: false,\n      });\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (prevTranslate === maxShift && infinite) {\n        this.setState({\n          translate: 0,\n          rightDisable: !infinite,\n        });\n      } else {\n        this.setState({\n          translate: maxShift,\n          rightDisable: !infinite,\n        });\n      }\n    }\n  };\n\n  moveBack = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    if (step > (10 - this.newFrameSize) && !infinite) {\n      return;\n    }\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    const newTranslate = prevTranslate + step * itemWidthWithGap;\n    const maxShift = -itemWidthWithGap * (10 - this.newFrameSize);\n\n    if (newTranslate <= 0) {\n      this.setState({\n        translate: newTranslate,\n        leftDisable: newTranslate === 0 ? !infinite : false,\n        rightDisable: false,\n      });\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (prevTranslate === 0 && infinite) {\n        this.setState({\n          translate: maxShift,\n          leftDisable: !infinite,\n        });\n      } else {\n        this.setState({\n          translate: 0,\n          leftDisable: !infinite,\n        });\n      }\n    }\n  };\n\n  setLeftButton = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n    const {\n      infinite,\n    } = this.props;\n\n    if (prevTranslate < 0) {\n      return false;\n    }\n\n    return !infinite;\n  };\n\n  setRightButton = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n\n    const {\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    const maxShift = -itemWidthWithGap * (10 - this.newFrameSize);\n\n    if (prevTranslate >= maxShift) {\n      return prevTranslate === maxShift ? !infinite : false;\n    }\n\n    return !infinite;\n  };\n\n  calcWrapperWidth = () => {\n    const {\n      itemWidth,\n      frameSize,\n    } = this.props;\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    if (frameSize * itemWidthWithGap - 20 > 1300) {\n      this.newFrameSize = Math.trunc(\n        1300 / (itemWidthWithGap),\n      );\n\n      return this.newFrameSize * itemWidthWithGap - this.gap;\n    }\n\n    this.newFrameSize = frameSize;\n\n    return frameSize * itemWidthWithGap - this.gap;\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    let { rightDisable, leftDisable } = this.state;\n\n    const wrapperStyle: CSSProperties = {\n      width: this.calcWrapperWidth(),\n    };\n\n    const itemStyle: CSSProperties = {\n      width: itemWidth,\n    };\n\n    const listStyle: CSSProperties = {\n      transitionDuration: `${animationDuration}ms`,\n      transform: `translateX(${this.state.translate}px)`,\n      gap: this.gap,\n    };\n\n    leftDisable = this.setLeftButton();\n    rightDisable = this.setRightButton();\n\n    return (\n      <div\n        className=\"wrapper\"\n        style={wrapperStyle}\n      >\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={listStyle}\n          >\n            {images.map((image, index) => (\n              <li key={uuid()}>\n                <img src={image} alt={String(index + 1)} style={itemStyle} />\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"Carousel__controls\">\n            <button\n              type=\"button\"\n              className={classNames(\n                'Carousel__button',\n                { 'Carousel__button--enabled': !leftDisable },\n              )}\n              onClick={this.moveBack}\n            >\n              {'<'}\n            </button>\n\n            <button\n              type=\"button\"\n              data-cy=\"next\"\n              className={classNames(\n                'Carousel__button',\n                { 'Carousel__button--enabled': !rightDisable },\n              )}\n              onClick={this.moveNext}\n            >\n              {'>'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    let itemWidth = Number(event.target.value);\n\n    if (itemWidth < 70) {\n      itemWidth = 70;\n    }\n\n    if (itemWidth > 500) {\n      itemWidth = 500;\n    }\n\n    this.setState({ itemWidth });\n  };\n\n  handleFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    let frameSize = Number(event.target.value);\n\n    if (frameSize < 1) {\n      frameSize = 1;\n    }\n\n    if (frameSize > 10) {\n      frameSize = 10;\n    }\n\n    this.setState({ frameSize });\n  };\n\n  handleStep = (event: ChangeEvent<HTMLInputElement>) => {\n    let step = Number(event.target.value);\n\n    if (step < 1) {\n      step = 1;\n    }\n\n    if (step > 10) {\n      step = 10;\n    }\n\n    this.setState({ step });\n  };\n\n  handleAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    let animationDuration = Number(event.target.value);\n\n    if (animationDuration < 1) {\n      animationDuration = 1;\n    }\n\n    this.setState({ animationDuration });\n  };\n\n  handleInfinite = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <div className=\"controls\">\n          <label>\n            {'ItemWidth: '}\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"ItemWidth\"\n              min=\"70\"\n              max=\"500\"\n              defaultValue={itemWidth}\n              onChange={this.handleItemWidth}\n            />\n          </label>\n\n          <label>\n            {'FrameSize: '}\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={frameSize}\n              onChange={this.handleFrameSize}\n            />\n          </label>\n\n          <label>\n            {'Step: '}\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"step\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={step}\n              onChange={this.handleStep}\n            />\n          </label>\n\n          <label>\n            {'AnimationDuration: '}\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min=\"1\"\n              defaultValue={animationDuration}\n              onChange={this.handleAnimationDuration}\n            />\n          </label>\n\n          <label>\n            {'Infinite: '}\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInfinite}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}