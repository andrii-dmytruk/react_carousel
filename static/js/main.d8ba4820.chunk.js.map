{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","gap","state","translate","leftDisable","props","infinite","rightDisable","frameSize","newFrameSize","moveNext","prevTranslate","step","itemWidth","itemWidthWithGap","newTranslate","maxShift","setState","moveBack","calcWrapperWidth","Math","trunc","this","images","animationDuration","wrapperStyle","width","itemStyle","listStyle","transitionDuration","transform","className","style","map","image","index","src","alt","String","uuid","type","classNames","onClick","React","Component","App","handleItemWidth","event","prevState","Number","target","value","handleFrameSize","handleStep","handleAnimationDuration","handleInfinite","checked","length","name","id","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8ba4820.chunk.js","sourcesContent":["// import { type } from 'os';\nimport uuid from 'react-uuid';\nimport React, { CSSProperties } from 'react';\nimport './Carousel.scss';\nimport classNames from 'classnames';\n\ntype State = {\n  translate: number;\n  leftDisable: boolean;\n  rightDisable: boolean;\n  frameSize: number;\n};\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  gap = 20;\n\n  state: Readonly<State> = {\n    translate: 0,\n    leftDisable: !this.props.infinite,\n    rightDisable: false,\n    frameSize: this.props.frameSize,\n  };\n\n  newFrameSize = this.state.frameSize;\n\n  moveNext = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    const newTranslate = prevTranslate - step * itemWidthWithGap;\n    const maxShift = -itemWidthWithGap * (10 - this.newFrameSize);\n\n    if (newTranslate >= maxShift) {\n      this.setState({\n        translate: newTranslate,\n        rightDisable: newTranslate === maxShift ? !infinite : false,\n        leftDisable: false,\n      });\n    } else {\n      const state = {\n        translate: infinite ? 0 : maxShift,\n        rightDisable: !infinite,\n      };\n\n      this.setState(state);\n    }\n  };\n\n  moveBack = () => {\n    const {\n      translate: prevTranslate,\n    } = this.state;\n    const {\n      step,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    const newTranslate = prevTranslate + step * itemWidthWithGap;\n\n    if (newTranslate <= 0) {\n      this.setState({\n        translate: newTranslate,\n        leftDisable: newTranslate === 0 ? !infinite : false,\n        rightDisable: false,\n      });\n    } else {\n      const state = {\n        translate: infinite ? -itemWidthWithGap * (10 - this.newFrameSize) : 0,\n        leftDisable: !infinite,\n      };\n\n      this.setState(state);\n    }\n  };\n\n  calcWrapperWidth = () => {\n    const {\n      itemWidth,\n      frameSize,\n    } = this.props;\n\n    const itemWidthWithGap = itemWidth + this.gap;\n\n    if (frameSize * itemWidthWithGap - 20 > 1300) {\n      this.newFrameSize = Math.trunc(\n        1300 / (itemWidthWithGap),\n      );\n\n      return this.newFrameSize * itemWidthWithGap - this.gap;\n    }\n\n    this.newFrameSize = frameSize;\n\n    return frameSize * itemWidthWithGap - this.gap;\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { rightDisable, leftDisable } = this.state;\n\n    const wrapperStyle: CSSProperties = {\n      width: this.calcWrapperWidth(),\n    };\n\n    const itemStyle: CSSProperties = {\n      width: itemWidth,\n    };\n\n    const listStyle: CSSProperties = {\n      transitionDuration: `${animationDuration}ms`,\n      transform: `translateX(${this.state.translate}px)`,\n      gap: this.gap,\n    };\n\n    return (\n      <div\n        className=\"wrapper\"\n        style={wrapperStyle}\n      >\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={listStyle}\n          >\n            {images.map((image, index) => (\n              <li key={uuid()}>\n                <img src={image} alt={String(index + 1)} style={itemStyle} />\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"Carousel__controls\">\n            <button\n              type=\"button\"\n              className={classNames(\n                'Carousel__button',\n                { 'Carousel__button--enabled': !leftDisable },\n              )}\n              onClick={this.moveBack}\n            >\n              {'<'}\n            </button>\n\n            <button\n              type=\"button\"\n              className={classNames(\n                'Carousel__button',\n                { 'Carousel__button--enabled': !rightDisable },\n              )}\n              onClick={this.moveNext}\n            >\n              {'>'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 2,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => (\n      {\n        ...prevState,\n        itemWidth: Number(event.target.value),\n      }\n    ));\n  };\n\n  handleFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => (\n      {\n        ...prevState,\n        frameSize: Number(event.target.value),\n      }\n    ));\n  };\n\n  handleStep = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => (\n      {\n        ...prevState,\n        step: Number(event.target.value),\n      }\n    ));\n  };\n\n  handleAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => (\n      {\n        ...prevState,\n        animationDuration: Number(event.target.value),\n      }\n    ));\n  };\n\n  handleInfinite = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => (\n      {\n        ...prevState,\n        infinite: event.target.checked,\n      }\n    ));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <div className=\"controls\">\n          <label>\n            {'ItemWidth: '}\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"ItemWidth\"\n              defaultValue=\"130\"\n              onChange={this.handleItemWidth}\n            />\n          </label>\n\n          <label>\n            {'FrameSize: '}\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              defaultValue=\"2\"\n              onChange={this.handleFrameSize}\n            />\n          </label>\n\n          <label>\n            {'Step: '}\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"step\"\n              defaultValue=\"2\"\n              onChange={this.handleStep}\n            />\n          </label>\n\n          <label>\n            {'AnimationDuration: '}\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              defaultValue=\"1000\"\n              onChange={this.handleAnimationDuration}\n            />\n          </label>\n\n          <label>\n            {'Infinite: '}\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInfinite}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}